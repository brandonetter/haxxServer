// Generated by Haxe 4.2.1
#ifndef INCLUDED_markdown_NodeVisitor
#define INCLUDED_markdown_NodeVisitor

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(markdown,ElementNode)
HX_DECLARE_CLASS1(markdown,Node)
HX_DECLARE_CLASS1(markdown,NodeVisitor)
HX_DECLARE_CLASS1(markdown,TextNode)

namespace markdown{


class HXCPP_CLASS_ATTRIBUTES NodeVisitor_obj {
	public:
		typedef ::hx::Object super;
		HX_DO_INTERFACE_RTTI;

		void (::hx::Object :: *_hx_visitText)( ::markdown::TextNode text); 
		static inline void visitText( ::Dynamic _hx_, ::markdown::TextNode text) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::markdown::NodeVisitor_obj *>(_hx_.mPtr->_hx_getInterface(0x0d07169d)))->_hx_visitText)(text);
		}
		bool (::hx::Object :: *_hx_visitElementBefore)( ::markdown::ElementNode element); 
		static inline bool visitElementBefore( ::Dynamic _hx_, ::markdown::ElementNode element) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::markdown::NodeVisitor_obj *>(_hx_.mPtr->_hx_getInterface(0x0d07169d)))->_hx_visitElementBefore)(element);
		}
		void (::hx::Object :: *_hx_visitElementAfter)( ::markdown::ElementNode element); 
		static inline void visitElementAfter( ::Dynamic _hx_, ::markdown::ElementNode element) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::markdown::NodeVisitor_obj *>(_hx_.mPtr->_hx_getInterface(0x0d07169d)))->_hx_visitElementAfter)(element);
		}
};

} // end namespace markdown

#endif /* INCLUDED_markdown_NodeVisitor */ 
