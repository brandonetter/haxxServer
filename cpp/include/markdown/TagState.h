// Generated by Haxe 4.2.1
#ifndef INCLUDED_markdown_TagState
#define INCLUDED_markdown_TagState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(markdown,InlineParser)
HX_DECLARE_CLASS1(markdown,InlineSyntax)
HX_DECLARE_CLASS1(markdown,Node)
HX_DECLARE_CLASS1(markdown,TagState)
HX_DECLARE_CLASS1(markdown,TagSyntax)

namespace markdown{


class HXCPP_CLASS_ATTRIBUTES TagState_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TagState_obj OBJ_;
		TagState_obj();

	public:
		enum { _hx_ClassId = 0x24c5baa6 };

		void __construct(int startPos,int endPos, ::markdown::TagSyntax syntax);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="markdown.TagState")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"markdown.TagState"); }
		static ::hx::ObjectPtr< TagState_obj > __new(int startPos,int endPos, ::markdown::TagSyntax syntax);
		static ::hx::ObjectPtr< TagState_obj > __alloc(::hx::Ctx *_hx_ctx,int startPos,int endPos, ::markdown::TagSyntax syntax);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TagState_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TagState",77,81,2a,cc); }

		int startPos;
		int endPos;
		 ::markdown::TagSyntax syntax;
		::Array< ::Dynamic> children;
		bool tryMatch( ::markdown::InlineParser parser);
		::Dynamic tryMatch_dyn();

		::Array< ::Dynamic> close( ::markdown::InlineParser parser);
		::Dynamic close_dyn();

};

} // end namespace markdown

#endif /* INCLUDED_markdown_TagState */ 
