// Generated by Haxe 4.2.1
#ifndef INCLUDED_Document
#define INCLUDED_Document

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Document)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS1(markdown,InlineSyntax)
HX_DECLARE_CLASS1(markdown,Node)



class HXCPP_CLASS_ATTRIBUTES Document_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Document_obj OBJ_;
		Document_obj();

	public:
		enum { _hx_ClassId = 0x2737835f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Document")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"Document"); }
		static ::hx::ObjectPtr< Document_obj > __new();
		static ::hx::ObjectPtr< Document_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Document_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Document",3b,ab,c4,74); }

		 ::haxe::ds::StringMap refLinks;
		::Array< ::Dynamic> inlineSyntaxes;
		 ::Dynamic linkResolver;
		Dynamic linkResolver_dyn() { return linkResolver;}
		 ::haxe::ds::StringMap codeBlockSyntaxes;
		void parseRefLinks(::Array< ::String > lines);
		::Dynamic parseRefLinks_dyn();

		::Array< ::Dynamic> parseLines(::Array< ::String > lines);
		::Dynamic parseLines_dyn();

		::Array< ::Dynamic> parseInline(::String text);
		::Dynamic parseInline_dyn();

};


#endif /* INCLUDED_Document */ 
