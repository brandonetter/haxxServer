// Generated by Haxe 4.2.1
#ifndef INCLUDED_haxe_macro_FunctionKind
#define INCLUDED_haxe_macro_FunctionKind

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,macro,FunctionKind)
namespace haxe{
namespace macro{


class FunctionKind_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef FunctionKind_obj OBJ_;

	public:
		FunctionKind_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("haxe.macro.FunctionKind",96,d5,23,47); }
		::String __ToString() const { return HX_("FunctionKind.",02,26,6b,5e) + _hx_tag; }

		static ::haxe::macro::FunctionKind FAnonymous;
		static inline ::haxe::macro::FunctionKind FAnonymous_dyn() { return FAnonymous; }
		static ::haxe::macro::FunctionKind FArrow;
		static inline ::haxe::macro::FunctionKind FArrow_dyn() { return FArrow; }
		static ::haxe::macro::FunctionKind FNamed(::String name, ::Dynamic inlined);
		static ::Dynamic FNamed_dyn();
};

} // end namespace haxe
} // end namespace macro

#endif /* INCLUDED_haxe_macro_FunctionKind */ 
