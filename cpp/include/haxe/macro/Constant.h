// Generated by Haxe 4.2.1
#ifndef INCLUDED_haxe_macro_Constant
#define INCLUDED_haxe_macro_Constant

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,macro,Constant)
HX_DECLARE_CLASS2(haxe,macro,StringLiteralKind)
namespace haxe{
namespace macro{


class Constant_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef Constant_obj OBJ_;

	public:
		Constant_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("haxe.macro.Constant",6e,a5,78,ab); }
		::String __ToString() const { return HX_("Constant.",2a,56,3e,e6) + _hx_tag; }

		static ::haxe::macro::Constant CFloat(::String f);
		static ::Dynamic CFloat_dyn();
		static ::haxe::macro::Constant CIdent(::String s);
		static ::Dynamic CIdent_dyn();
		static ::haxe::macro::Constant CInt(::String v);
		static ::Dynamic CInt_dyn();
		static ::haxe::macro::Constant CRegexp(::String r,::String opt);
		static ::Dynamic CRegexp_dyn();
		static ::haxe::macro::Constant CString(::String s, ::haxe::macro::StringLiteralKind kind);
		static ::Dynamic CString_dyn();
};

} // end namespace haxe
} // end namespace macro

#endif /* INCLUDED_haxe_macro_Constant */ 
