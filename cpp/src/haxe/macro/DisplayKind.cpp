// Generated by Haxe 4.2.1
#include <hxcpp.h>

#ifndef INCLUDED_haxe_macro_DisplayKind
#include <haxe/macro/DisplayKind.h>
#endif
namespace haxe{
namespace macro{

::haxe::macro::DisplayKind DisplayKind_obj::DKCall;

::haxe::macro::DisplayKind DisplayKind_obj::DKDot;

::haxe::macro::DisplayKind DisplayKind_obj::DKMarked;

::haxe::macro::DisplayKind DisplayKind_obj::DKPattern(bool outermost)
{
	return ::hx::CreateEnum< DisplayKind_obj >(HX_("DKPattern",89,81,af,a8),4,1)->_hx_init(0,outermost);
}

::haxe::macro::DisplayKind DisplayKind_obj::DKStructure;

bool DisplayKind_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("DKCall",c5,4f,e5,8b)) { outValue = DisplayKind_obj::DKCall; return true; }
	if (inName==HX_("DKDot",42,6d,06,59)) { outValue = DisplayKind_obj::DKDot; return true; }
	if (inName==HX_("DKMarked",93,04,35,4f)) { outValue = DisplayKind_obj::DKMarked; return true; }
	if (inName==HX_("DKPattern",89,81,af,a8)) { outValue = DisplayKind_obj::DKPattern_dyn(); return true; }
	if (inName==HX_("DKStructure",ac,cf,07,7a)) { outValue = DisplayKind_obj::DKStructure; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(DisplayKind_obj)

int DisplayKind_obj::__FindIndex(::String inName)
{
	if (inName==HX_("DKCall",c5,4f,e5,8b)) return 0;
	if (inName==HX_("DKDot",42,6d,06,59)) return 1;
	if (inName==HX_("DKMarked",93,04,35,4f)) return 3;
	if (inName==HX_("DKPattern",89,81,af,a8)) return 4;
	if (inName==HX_("DKStructure",ac,cf,07,7a)) return 2;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(DisplayKind_obj,DKPattern,return)

int DisplayKind_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("DKCall",c5,4f,e5,8b)) return 0;
	if (inName==HX_("DKDot",42,6d,06,59)) return 0;
	if (inName==HX_("DKMarked",93,04,35,4f)) return 0;
	if (inName==HX_("DKPattern",89,81,af,a8)) return 1;
	if (inName==HX_("DKStructure",ac,cf,07,7a)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val DisplayKind_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("DKCall",c5,4f,e5,8b)) return DKCall;
	if (inName==HX_("DKDot",42,6d,06,59)) return DKDot;
	if (inName==HX_("DKMarked",93,04,35,4f)) return DKMarked;
	if (inName==HX_("DKPattern",89,81,af,a8)) return DKPattern_dyn();
	if (inName==HX_("DKStructure",ac,cf,07,7a)) return DKStructure;
	return super::__Field(inName,inCallProp);
}

static ::String DisplayKind_obj_sStaticFields[] = {
	HX_("DKCall",c5,4f,e5,8b),
	HX_("DKDot",42,6d,06,59),
	HX_("DKStructure",ac,cf,07,7a),
	HX_("DKMarked",93,04,35,4f),
	HX_("DKPattern",89,81,af,a8),
	::String(null())
};

::hx::Class DisplayKind_obj::__mClass;

Dynamic __Create_DisplayKind_obj() { return new DisplayKind_obj; }

void DisplayKind_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("haxe.macro.DisplayKind",ec,3e,a4,88), ::hx::TCanCast< DisplayKind_obj >,DisplayKind_obj_sStaticFields,0,
	&__Create_DisplayKind_obj, &__Create,
	&super::__SGetClass(), &CreateDisplayKind_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &DisplayKind_obj::__GetStatic;
}

void DisplayKind_obj::__boot()
{
DKCall = ::hx::CreateConstEnum< DisplayKind_obj >(HX_("DKCall",c5,4f,e5,8b),0);
DKDot = ::hx::CreateConstEnum< DisplayKind_obj >(HX_("DKDot",42,6d,06,59),1);
DKMarked = ::hx::CreateConstEnum< DisplayKind_obj >(HX_("DKMarked",93,04,35,4f),3);
DKStructure = ::hx::CreateConstEnum< DisplayKind_obj >(HX_("DKStructure",ac,cf,07,7a),2);
}


} // end namespace haxe
} // end namespace macro
