// Generated by Haxe 4.2.1
#include <hxcpp.h>

#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_markdown_ElementNode
#include <markdown/ElementNode.h>
#endif
#ifndef INCLUDED_markdown_HtmlRenderer
#include <markdown/HtmlRenderer.h>
#endif
#ifndef INCLUDED_markdown_Node
#include <markdown/Node.h>
#endif
#ifndef INCLUDED_markdown_NodeVisitor
#include <markdown/NodeVisitor.h>
#endif
#ifndef INCLUDED_markdown_TextNode
#include <markdown/TextNode.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c9971e5b86122630_13_new,"markdown.HtmlRenderer","new",0x52c2323f,"markdown.HtmlRenderer.new","markdown/HtmlRenderer.hx",13,0xc6694330)
HX_LOCAL_STACK_FRAME(_hx_pos_c9971e5b86122630_15_render,"markdown.HtmlRenderer","render",0x1c943ed7,"markdown.HtmlRenderer.render","markdown/HtmlRenderer.hx",15,0xc6694330)
HX_LOCAL_STACK_FRAME(_hx_pos_c9971e5b86122630_23_visitText,"markdown.HtmlRenderer","visitText",0x11024737,"markdown.HtmlRenderer.visitText","markdown/HtmlRenderer.hx",23,0xc6694330)
HX_LOCAL_STACK_FRAME(_hx_pos_c9971e5b86122630_26_visitElementBefore,"markdown.HtmlRenderer","visitElementBefore",0x0cd21091,"markdown.HtmlRenderer.visitElementBefore","markdown/HtmlRenderer.hx",26,0xc6694330)
static const ::String _hx_array_data_2396a6cd_7[] = {
	HX_("\n",0a,00,00,00),
};
static const ::String _hx_array_data_2396a6cd_8[] = {
	HX_(" />",4f,71,18,00),
};
static const ::String _hx_array_data_2396a6cd_9[] = {
	HX_(">",3e,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_c9971e5b86122630_54_visitElementAfter,"markdown.HtmlRenderer","visitElementAfter",0x4c11524a,"markdown.HtmlRenderer.visitElementAfter","markdown/HtmlRenderer.hx",54,0xc6694330)
HX_LOCAL_STACK_FRAME(_hx_pos_c9971e5b86122630_59_sortAttributes,"markdown.HtmlRenderer","sortAttributes",0xc318b256,"markdown.HtmlRenderer.sortAttributes","markdown/HtmlRenderer.hx",59,0xc6694330)
HX_LOCAL_STACK_FRAME(_hx_pos_c9971e5b86122630_9_boot,"markdown.HtmlRenderer","boot",0x0f42c573,"markdown.HtmlRenderer.boot","markdown/HtmlRenderer.hx",9,0xc6694330)
HX_LOCAL_STACK_FRAME(_hx_pos_c9971e5b86122630_57_boot,"markdown.HtmlRenderer","boot",0x0f42c573,"markdown.HtmlRenderer.boot","markdown/HtmlRenderer.hx",57,0xc6694330)
static const ::String _hx_array_data_2396a6cd_14[] = {
	HX_("src",e4,a6,57,00),HX_("alt",29,f9,49,00),
};
namespace markdown{

void HtmlRenderer_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_c9971e5b86122630_13_new)
            	}

Dynamic HtmlRenderer_obj::__CreateEmpty() { return new HtmlRenderer_obj; }

void *HtmlRenderer_obj::_hx_vtable = 0;

Dynamic HtmlRenderer_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< HtmlRenderer_obj > _hx_result = new HtmlRenderer_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool HtmlRenderer_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x75bb429d;
}

static ::markdown::NodeVisitor_obj _hx_markdown_HtmlRenderer__hx_markdown_NodeVisitor= {
	( void (::hx::Object::*)( ::markdown::TextNode))&::markdown::HtmlRenderer_obj::visitText,
	( bool (::hx::Object::*)( ::markdown::ElementNode))&::markdown::HtmlRenderer_obj::visitElementBefore,
	( void (::hx::Object::*)( ::markdown::ElementNode))&::markdown::HtmlRenderer_obj::visitElementAfter,
};

void *HtmlRenderer_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x0d07169d: return &_hx_markdown_HtmlRenderer__hx_markdown_NodeVisitor;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

::String HtmlRenderer_obj::render(::Array< ::Dynamic> nodes){
            	HX_GC_STACKFRAME(&_hx_pos_c9971e5b86122630_15_render)
HXLINE(  16)		this->buffer =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE(  17)		{
HXLINE(  17)			int _g = 0;
HXDLIN(  17)			while((_g < nodes->length)){
HXLINE(  17)				::Dynamic node = nodes->__get(_g);
HXDLIN(  17)				_g = (_g + 1);
HXLINE(  18)				::markdown::Node_obj::accept(node,::hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE(  19)		return this->buffer->toString();
            	}


HX_DEFINE_DYNAMIC_FUNC1(HtmlRenderer_obj,render,return )

void HtmlRenderer_obj::visitText( ::markdown::TextNode text){
            	HX_STACKFRAME(&_hx_pos_c9971e5b86122630_23_visitText)
HXDLIN(  23)		 ::StringBuf _this = this->buffer;
HXDLIN(  23)		::String x = text->text;
HXDLIN(  23)		if (::hx::IsNotNull( _this->charBuf )) {
HXDLIN(  23)			_this->flush();
            		}
HXDLIN(  23)		if (::hx::IsNull( _this->b )) {
HXDLIN(  23)			_this->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            		}
            		else {
HXDLIN(  23)			::Array< ::String > _this1 = _this->b;
HXDLIN(  23)			_this1->push(::Std_obj::string(x));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(HtmlRenderer_obj,visitText,(void))

bool HtmlRenderer_obj::visitElementBefore( ::markdown::ElementNode element){
            	HX_STACKFRAME(&_hx_pos_c9971e5b86122630_26_visitElementBefore)
HXLINE(  28)		bool _hx_tmp;
HXDLIN(  28)		if ((this->buffer->toString() != HX_("",00,00,00,00))) {
HXLINE(  28)			_hx_tmp = ::markdown::HtmlRenderer_obj::BLOCK_TAGS->match(element->tag);
            		}
            		else {
HXLINE(  28)			_hx_tmp = false;
            		}
HXDLIN(  28)		if (_hx_tmp) {
HXLINE(  29)			 ::StringBuf _this = this->buffer;
HXDLIN(  29)			if (::hx::IsNotNull( _this->charBuf )) {
HXLINE(  29)				_this->flush();
            			}
HXDLIN(  29)			if (::hx::IsNull( _this->b )) {
HXLINE(  29)				_this->b = ::Array_obj< ::String >::fromData( _hx_array_data_2396a6cd_7,1);
            			}
            			else {
HXLINE(  29)				_this->b->push(HX_("\n",0a,00,00,00));
            			}
            		}
HXLINE(  32)		{
HXLINE(  32)			 ::StringBuf _this = this->buffer;
HXDLIN(  32)			::String x = (HX_("<",3c,00,00,00) + element->tag);
HXDLIN(  32)			if (::hx::IsNotNull( _this->charBuf )) {
HXLINE(  32)				_this->flush();
            			}
HXDLIN(  32)			if (::hx::IsNull( _this->b )) {
HXLINE(  32)				_this->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            			}
            			else {
HXLINE(  32)				::Array< ::String > _this1 = _this->b;
HXDLIN(  32)				_this1->push(::Std_obj::string(x));
            			}
            		}
HXLINE(  37)		::Array< ::String > _g = ::Array_obj< ::String >::__new(0);
HXDLIN(  37)		{
HXLINE(  37)			 ::Dynamic k = element->attributes->keys();
HXDLIN(  37)			while(( (bool)(k->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE(  37)				::String k1 = ( (::String)(k->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXDLIN(  37)				_g->push(k1);
            			}
            		}
HXDLIN(  37)		::Array< ::String > attributeNames = _g;
HXLINE(  38)		attributeNames->sort(::markdown::HtmlRenderer_obj::sortAttributes_dyn());
HXLINE(  39)		{
HXLINE(  39)			int _g1 = 0;
HXDLIN(  39)			while((_g1 < attributeNames->length)){
HXLINE(  39)				::String name = attributeNames->__get(_g1);
HXDLIN(  39)				_g1 = (_g1 + 1);
HXLINE(  40)				{
HXLINE(  40)					 ::StringBuf _this = this->buffer;
HXDLIN(  40)					::String x = ((((HX_(" ",20,00,00,00) + name) + HX_("=\"",45,35,00,00)) + element->attributes->get(name)) + HX_("\"",22,00,00,00));
HXDLIN(  40)					if (::hx::IsNotNull( _this->charBuf )) {
HXLINE(  40)						_this->flush();
            					}
HXDLIN(  40)					if (::hx::IsNull( _this->b )) {
HXLINE(  40)						_this->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            					}
            					else {
HXLINE(  40)						::Array< ::String > _this1 = _this->b;
HXDLIN(  40)						_this1->push(::Std_obj::string(x));
            					}
            				}
            			}
            		}
HXLINE(  43)		if (::hx::IsNull( element->children )) {
HXLINE(  45)			{
HXLINE(  45)				 ::StringBuf _this = this->buffer;
HXDLIN(  45)				if (::hx::IsNotNull( _this->charBuf )) {
HXLINE(  45)					_this->flush();
            				}
HXDLIN(  45)				if (::hx::IsNull( _this->b )) {
HXLINE(  45)					_this->b = ::Array_obj< ::String >::fromData( _hx_array_data_2396a6cd_8,1);
            				}
            				else {
HXLINE(  45)					_this->b->push(HX_(" />",4f,71,18,00));
            				}
            			}
HXLINE(  46)			return false;
            		}
            		else {
HXLINE(  48)			{
HXLINE(  48)				 ::StringBuf _this = this->buffer;
HXDLIN(  48)				if (::hx::IsNotNull( _this->charBuf )) {
HXLINE(  48)					_this->flush();
            				}
HXDLIN(  48)				if (::hx::IsNull( _this->b )) {
HXLINE(  48)					_this->b = ::Array_obj< ::String >::fromData( _hx_array_data_2396a6cd_9,1);
            				}
            				else {
HXLINE(  48)					_this->b->push(HX_(">",3e,00,00,00));
            				}
            			}
HXLINE(  49)			return true;
            		}
HXLINE(  43)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(HtmlRenderer_obj,visitElementBefore,return )

void HtmlRenderer_obj::visitElementAfter( ::markdown::ElementNode element){
            	HX_STACKFRAME(&_hx_pos_c9971e5b86122630_54_visitElementAfter)
HXDLIN(  54)		 ::StringBuf _this = this->buffer;
HXDLIN(  54)		::String x = ((HX_("</",73,34,00,00) + element->tag) + HX_(">",3e,00,00,00));
HXDLIN(  54)		if (::hx::IsNotNull( _this->charBuf )) {
HXDLIN(  54)			_this->flush();
            		}
HXDLIN(  54)		if (::hx::IsNull( _this->b )) {
HXDLIN(  54)			_this->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            		}
            		else {
HXDLIN(  54)			::Array< ::String > _this1 = _this->b;
HXDLIN(  54)			_this1->push(::Std_obj::string(x));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(HtmlRenderer_obj,visitElementAfter,(void))

 ::EReg HtmlRenderer_obj::BLOCK_TAGS;

::Array< ::String > HtmlRenderer_obj::attributeOrder;

int HtmlRenderer_obj::sortAttributes(::String a,::String b){
            	HX_STACKFRAME(&_hx_pos_c9971e5b86122630_59_sortAttributes)
HXLINE(  60)		int ia = ::markdown::HtmlRenderer_obj::attributeOrder->indexOf(a,null());
HXLINE(  61)		int ib = ::markdown::HtmlRenderer_obj::attributeOrder->indexOf(a,null());
HXLINE(  62)		bool _hx_tmp;
HXDLIN(  62)		if ((ia > -1)) {
HXLINE(  62)			_hx_tmp = (ib > -1);
            		}
            		else {
HXLINE(  62)			_hx_tmp = false;
            		}
HXDLIN(  62)		if (_hx_tmp) {
HXLINE(  63)			return (ia - ib);
            		}
HXLINE(  64)		return ::Reflect_obj::compare(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HtmlRenderer_obj,sortAttributes,return )


::hx::ObjectPtr< HtmlRenderer_obj > HtmlRenderer_obj::__new() {
	::hx::ObjectPtr< HtmlRenderer_obj > __this = new HtmlRenderer_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< HtmlRenderer_obj > HtmlRenderer_obj::__alloc(::hx::Ctx *_hx_ctx) {
	HtmlRenderer_obj *__this = (HtmlRenderer_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(HtmlRenderer_obj), true, "markdown.HtmlRenderer"));
	*(void **)__this = HtmlRenderer_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

HtmlRenderer_obj::HtmlRenderer_obj()
{
}

void HtmlRenderer_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(HtmlRenderer);
	HX_MARK_MEMBER_NAME(buffer,"buffer");
	HX_MARK_END_CLASS();
}

void HtmlRenderer_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(buffer,"buffer");
}

::hx::Val HtmlRenderer_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"buffer") ) { return ::hx::Val( buffer ); }
		if (HX_FIELD_EQ(inName,"render") ) { return ::hx::Val( render_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"visitText") ) { return ::hx::Val( visitText_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"visitElementAfter") ) { return ::hx::Val( visitElementAfter_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"visitElementBefore") ) { return ::hx::Val( visitElementBefore_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool HtmlRenderer_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"BLOCK_TAGS") ) { outValue = ( BLOCK_TAGS ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"attributeOrder") ) { outValue = ( attributeOrder ); return true; }
		if (HX_FIELD_EQ(inName,"sortAttributes") ) { outValue = sortAttributes_dyn(); return true; }
	}
	return false;
}

::hx::Val HtmlRenderer_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"buffer") ) { buffer=inValue.Cast<  ::StringBuf >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool HtmlRenderer_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"BLOCK_TAGS") ) { BLOCK_TAGS=ioValue.Cast<  ::EReg >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"attributeOrder") ) { attributeOrder=ioValue.Cast< ::Array< ::String > >(); return true; }
	}
	return false;
}

void HtmlRenderer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("buffer",00,bd,94,d0));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo HtmlRenderer_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::StringBuf */ ,(int)offsetof(HtmlRenderer_obj,buffer),HX_("buffer",00,bd,94,d0)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo HtmlRenderer_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::EReg */ ,(void *) &HtmlRenderer_obj::BLOCK_TAGS,HX_("BLOCK_TAGS",6b,08,1a,a3)},
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &HtmlRenderer_obj::attributeOrder,HX_("attributeOrder",d2,0a,c6,51)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String HtmlRenderer_obj_sMemberFields[] = {
	HX_("buffer",00,bd,94,d0),
	HX_("render",56,6b,29,05),
	HX_("visitText",18,b4,e2,5c),
	HX_("visitElementBefore",90,7f,f7,b0),
	HX_("visitElementAfter",2b,08,6b,b6),
	::String(null()) };

static void HtmlRenderer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(HtmlRenderer_obj::BLOCK_TAGS,"BLOCK_TAGS");
	HX_MARK_MEMBER_NAME(HtmlRenderer_obj::attributeOrder,"attributeOrder");
};

#ifdef HXCPP_VISIT_ALLOCS
static void HtmlRenderer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(HtmlRenderer_obj::BLOCK_TAGS,"BLOCK_TAGS");
	HX_VISIT_MEMBER_NAME(HtmlRenderer_obj::attributeOrder,"attributeOrder");
};

#endif

::hx::Class HtmlRenderer_obj::__mClass;

static ::String HtmlRenderer_obj_sStaticFields[] = {
	HX_("BLOCK_TAGS",6b,08,1a,a3),
	HX_("attributeOrder",d2,0a,c6,51),
	HX_("sortAttributes",d5,f5,7c,ec),
	::String(null())
};

void HtmlRenderer_obj::__register()
{
	HtmlRenderer_obj _hx_dummy;
	HtmlRenderer_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("markdown.HtmlRenderer",cd,a6,96,23);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &HtmlRenderer_obj::__GetStatic;
	__mClass->mSetStaticField = &HtmlRenderer_obj::__SetStatic;
	__mClass->mMarkFunc = HtmlRenderer_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(HtmlRenderer_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(HtmlRenderer_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< HtmlRenderer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = HtmlRenderer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HtmlRenderer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HtmlRenderer_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void HtmlRenderer_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_c9971e5b86122630_9_boot)
HXDLIN(   9)		BLOCK_TAGS =  ::EReg_obj::__alloc( HX_CTX ,HX_("blockquote|h1|h2|h3|h4|h5|h6|hr|p|pre",6f,c2,52,ea),HX_("",00,00,00,00));
            	}
{
            	HX_STACKFRAME(&_hx_pos_c9971e5b86122630_57_boot)
HXDLIN(  57)		attributeOrder = ::Array_obj< ::String >::fromData( _hx_array_data_2396a6cd_14,2);
            	}
}

} // end namespace markdown
