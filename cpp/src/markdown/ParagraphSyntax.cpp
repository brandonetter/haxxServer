// Generated by Haxe 4.2.1
#include <hxcpp.h>

#ifndef INCLUDED_Document
#include <Document.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_markdown_BlockParser
#include <markdown/BlockParser.h>
#endif
#ifndef INCLUDED_markdown_BlockSyntax
#include <markdown/BlockSyntax.h>
#endif
#ifndef INCLUDED_markdown_ElementNode
#include <markdown/ElementNode.h>
#endif
#ifndef INCLUDED_markdown_Node
#include <markdown/Node.h>
#endif
#ifndef INCLUDED_markdown_ParagraphSyntax
#include <markdown/ParagraphSyntax.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_922b14439ec744a6_441_new,"markdown.ParagraphSyntax","new",0xb5b50ac4,"markdown.ParagraphSyntax.new","markdown/BlockParser.hx",441,0x037f5eb2)
HX_LOCAL_STACK_FRAME(_hx_pos_922b14439ec744a6_443_get_canEndBlock,"markdown.ParagraphSyntax","get_canEndBlock",0x4204bf9d,"markdown.ParagraphSyntax.get_canEndBlock","markdown/BlockParser.hx",443,0x037f5eb2)
HX_LOCAL_STACK_FRAME(_hx_pos_922b14439ec744a6_446_canParse,"markdown.ParagraphSyntax","canParse",0x05856d1f,"markdown.ParagraphSyntax.canParse","markdown/BlockParser.hx",446,0x037f5eb2)
HX_LOCAL_STACK_FRAME(_hx_pos_922b14439ec744a6_449_parse,"markdown.ParagraphSyntax","parse",0x79452b97,"markdown.ParagraphSyntax.parse","markdown/BlockParser.hx",449,0x037f5eb2)
namespace markdown{

void ParagraphSyntax_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_922b14439ec744a6_441_new)
HXDLIN( 441)		super::__construct();
            	}

Dynamic ParagraphSyntax_obj::__CreateEmpty() { return new ParagraphSyntax_obj; }

void *ParagraphSyntax_obj::_hx_vtable = 0;

Dynamic ParagraphSyntax_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ParagraphSyntax_obj > _hx_result = new ParagraphSyntax_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ParagraphSyntax_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3f123f02) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x3f123f02;
	} else {
		return inClassId==(int)0x41d975bd;
	}
}

bool ParagraphSyntax_obj::get_canEndBlock(){
            	HX_STACKFRAME(&_hx_pos_922b14439ec744a6_443_get_canEndBlock)
HXDLIN( 443)		return false;
            	}


bool ParagraphSyntax_obj::canParse( ::markdown::BlockParser parser){
            	HX_STACKFRAME(&_hx_pos_922b14439ec744a6_446_canParse)
HXDLIN( 446)		return true;
            	}


::Dynamic ParagraphSyntax_obj::parse( ::markdown::BlockParser parser){
            	HX_GC_STACKFRAME(&_hx_pos_922b14439ec744a6_449_parse)
HXLINE( 450)		::Array< ::String > childLines = ::Array_obj< ::String >::__new(0);
HXLINE( 453)		while(!(::markdown::BlockSyntax_obj::isAtBlockEnd(parser))){
HXLINE( 454)			childLines->push(::StringTools_obj::ltrim(parser->lines->__get(parser->pos)));
HXLINE( 455)			parser->advance();
            		}
HXLINE( 458)		 ::Document parser1 = parser->document;
HXDLIN( 458)		::Array< ::Dynamic> contents = parser1->parseInline(childLines->join(HX_("\n",0a,00,00,00)));
HXLINE( 459)		return  ::markdown::ElementNode_obj::__alloc( HX_CTX ,HX_("p",70,00,00,00),contents);
            	}



::hx::ObjectPtr< ParagraphSyntax_obj > ParagraphSyntax_obj::__new() {
	::hx::ObjectPtr< ParagraphSyntax_obj > __this = new ParagraphSyntax_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< ParagraphSyntax_obj > ParagraphSyntax_obj::__alloc(::hx::Ctx *_hx_ctx) {
	ParagraphSyntax_obj *__this = (ParagraphSyntax_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ParagraphSyntax_obj), false, "markdown.ParagraphSyntax"));
	*(void **)__this = ParagraphSyntax_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ParagraphSyntax_obj::ParagraphSyntax_obj()
{
}

::hx::Val ParagraphSyntax_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"parse") ) { return ::hx::Val( parse_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"canParse") ) { return ::hx::Val( canParse_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"get_canEndBlock") ) { return ::hx::Val( get_canEndBlock_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ParagraphSyntax_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ParagraphSyntax_obj_sStaticStorageInfo = 0;
#endif

static ::String ParagraphSyntax_obj_sMemberFields[] = {
	HX_("get_canEndBlock",39,7f,83,a3),
	HX_("canParse",03,d2,e8,2b),
	HX_("parse",33,90,55,bd),
	::String(null()) };

::hx::Class ParagraphSyntax_obj::__mClass;

void ParagraphSyntax_obj::__register()
{
	ParagraphSyntax_obj _hx_dummy;
	ParagraphSyntax_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("markdown.ParagraphSyntax",d2,98,27,a5);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ParagraphSyntax_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ParagraphSyntax_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ParagraphSyntax_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ParagraphSyntax_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace markdown
